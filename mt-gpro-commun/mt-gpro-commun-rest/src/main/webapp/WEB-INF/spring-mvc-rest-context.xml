<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

	<context:property-placeholder location="classpath:application.properties" />

	<mvc:annotation-driven />

	<context:component-scan base-package="com.gpro.consulting.tiers.commun.rest.security" />

	<security:global-method-security
		pre-post-annotations="enabled" />

	<!--  <security:http pattern="/**/user/getAll" security="none"   /> -->
	  
	 	 <security:http pattern="/**/user/save" security="none"   />
	 
	 	 <security:http pattern="/**/login" security="none"   />
	
	 
	<security:http pattern="/**/signup" security="none" /> 
	<security:http pattern="/**" use-expressions="true" create-session="stateless">
	
	
		<!--  Commente par Samer  -->
   <!--  <security:intercept-url pattern="/**" access="hasRole('RESPONSABLE')"/> -->
     
	 <security:intercept-url pattern="/**/user/getAll" access="hasRole('RESPONSABLE')"/> 
    <security:http-basic entry-point-ref="restAuthenticationEntryPoint" />
    <security:custom-filter before="FORM_LOGIN_FILTER" ref="jwtAuthenticationFilter"/>

</security:http>
   
	<!-- Entry point for REST service.
	<security:http pattern="/**" entry-point-ref="restAuthenticationEntryPoint"
		create-session="stateless">
		Â <security:intercept-url pattern="/**" access="hasRole('role')"/>
		<security:custom-filter before="FORM_LOGIN_FILTER"
			ref="jwtAuthenticationFilter" />
	</security:http> -->
	<bean id="restAuthenticationEntryPoint" class="com.gpro.consulting.tiers.commun.rest.security.RestAuthenticationEntryPoint" />

	<!-- Custom Filter for REST service. -->
	<bean id="jwtAuthenticationFilter" class="com.gpro.consulting.tiers.commun.rest.security.JWTAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="authenticationSuccessHandler" ref="jwtAuthenticationSuccessHandler" />
	</bean>
	<security:authentication-manager alias="authenticationManager">
		 
		<security:authentication-provider
			ref="jwtAuthenticationProvider" />
	</security:authentication-manager>

	<bean id="jwtAuthenticationProvider" class="com.gpro.consulting.tiers.commun.rest.security.JwtAuthenticationProvider" />
	<!-- A handler for successful REST service authentication. -->
	<bean id="jwtAuthenticationSuccessHandler"
		class="com.gpro.consulting.tiers.commun.rest.security.JwtAuthenticationSuccessHandler" />
	<bean id="jwtUtil" class="com.gpro.consulting.tiers.commun.rest.security.JwtUtil" />
  <bean id="messageSource"  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    <property name="basename" value="message"/>
    <property name="cacheSeconds" value="1"/>
</bean>
</beans>